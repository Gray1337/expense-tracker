{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _taggedTemplateLiteral from\"C:/Users/Gray/Desktop/\\u524D\\u7AEF\\u5DE5\\u7A0B/expense-tracker-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  border: 1px solid #e8e8e8;\\n  border-radius: 4px;\\n  overflow: auto;\\n  padding: 8px 24px;\\n  height: 200px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext}from'react';import{List}from'antd';import{DollarCircleOutlined,DeleteOutlined}from'@ant-design/icons';import styled from\"@emotion/styled\";import InfiniteScroll from'react-infinite-scroller';import{ExpenseTrackerContext}from'../../../context/context';var ListContainer=styled.div(_templateObject());var ListTracker=function ListTracker(){var _useContext=useContext(ExpenseTrackerContext),transactions=_useContext.transactions,deleteTransaction=_useContext.deleteTransaction;return/*#__PURE__*/_jsx(ListContainer,{children:/*#__PURE__*/_jsx(InfiniteScroll,{initialLoad:false,pageStart:0,useWindow:false,loadMore:'',children:/*#__PURE__*/_jsx(List,{dataSource:transactions,renderItem:function renderItem(item){return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsx(List.Item.Meta,{avatar:item.type==='收入'?/*#__PURE__*/_jsx(DollarCircleOutlined,{style:{color:'green',fontSize:'24px'}}):/*#__PURE__*/_jsx(DollarCircleOutlined,{style:{color:'red',fontSize:'24px'}}),title:/*#__PURE__*/_jsxs(\"div\",{children:[\"$\",item.amount]}),description:/*#__PURE__*/_jsxs(\"div\",{children:[item.category,\" - \",item.date]})}),/*#__PURE__*/_jsx(DeleteOutlined,{style:{fontSize:'24px'},onClick:function onClick(){return deleteTransaction(item.id);}})]},item.id);}})})});};export default ListTracker;","map":{"version":3,"sources":["C:/Users/Gray/Desktop/前端工程/expense-tracker-app/src/components/Main/List/List.js"],"names":["React","useContext","List","DollarCircleOutlined","DeleteOutlined","styled","InfiniteScroll","ExpenseTrackerContext","ListContainer","div","ListTracker","transactions","deleteTransaction","item","type","color","fontSize","amount","category","date","id"],"mappings":"0hBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,KAAqB,MAArB,CACA,OAASC,oBAAT,CAA+BC,cAA/B,KAAqD,mBAArD,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,OAAQC,qBAAR,KAAoC,0BAApC,CAEA,GAAMC,CAAAA,aAAa,CAAGH,MAAM,CAACI,GAAV,mBAAnB,CAQA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,iBAEkBT,UAAU,CAACM,qBAAD,CAF5B,CAEjBI,YAFiB,aAEjBA,YAFiB,CAEHC,iBAFG,aAEHA,iBAFG,CAIxB,mBACE,KAAC,aAAD,wBACE,KAAC,cAAD,EACI,WAAW,CAAE,KADjB,CAEI,SAAS,CAAE,CAFf,CAGI,SAAS,CAAE,KAHf,CAII,QAAQ,CAAE,EAJd,uBAMI,KAAC,IAAD,EACE,UAAU,CAAED,YADd,CAEE,UAAU,CAAE,oBAAAE,IAAI,qBACd,MAAC,IAAD,CAAM,IAAN,yBACE,KAAC,IAAD,CAAM,IAAN,CAAW,IAAX,EACE,MAAM,CAAGA,IAAI,CAACC,IAAL,GAAc,IAAd,cACN,KAAC,oBAAD,EAAsB,KAAK,CAAE,CAACC,KAAK,CAAC,OAAP,CAAeC,QAAQ,CAAC,MAAxB,CAA7B,EADM,cAEJ,KAAC,oBAAD,EAAsB,KAAK,CAAE,CAACD,KAAK,CAAC,KAAP,CAAaC,QAAQ,CAAC,MAAtB,CAA7B,EAHP,CAKE,KAAK,cAAE,2BAAOH,IAAI,CAACI,MAAZ,GALT,CAME,WAAW,cAAE,uBAAMJ,IAAI,CAACK,QAAX,OAAwBL,IAAI,CAACM,IAA7B,GANf,EADF,cASE,KAAC,cAAD,EAAgB,KAAK,CAAE,CAACH,QAAQ,CAAC,MAAV,CAAvB,CAA0C,OAAO,CAAE,yBAAIJ,CAAAA,iBAAiB,CAACC,IAAI,CAACO,EAAN,CAArB,EAAnD,EATF,GAAgBP,IAAI,CAACO,EAArB,CADc,EAFlB,EANJ,EADF,EADF,CA4BD,CAhCD,CAkCA,cAAeV,CAAAA,WAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { List } from 'antd';\r\nimport { DollarCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport styled from \"@emotion/styled\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport {ExpenseTrackerContext} from '../../../context/context'\r\n\r\nconst ListContainer = styled.div`\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 4px;\r\n  overflow: auto;\r\n  padding: 8px 24px;\r\n  height: 200px;\r\n`\r\n\r\nconst ListTracker = () => {\r\n\r\n  const {transactions, deleteTransaction} = useContext(ExpenseTrackerContext)\r\n\r\n  return (\r\n    <ListContainer>\r\n      <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          useWindow={false}\r\n          loadMore={''}\r\n        >\r\n          <List\r\n            dataSource={transactions}\r\n            renderItem={item => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={ item.type === '收入' ? \r\n                    (<DollarCircleOutlined style={{color:'green',fontSize:'24px'}}/>) \r\n                    : (<DollarCircleOutlined style={{color:'red',fontSize:'24px'}}/>)\r\n                  }\r\n                  title={<div>${item.amount}</div>}\r\n                  description={<div>{item.category} - {item.date}</div>}\r\n                />\r\n                <DeleteOutlined style={{fontSize:'24px'}} onClick={()=>deleteTransaction(item.id)} />\r\n              </List.Item>\r\n            )}\r\n          >\r\n          </List>\r\n        </InfiniteScroll>\r\n    </ListContainer>\r\n  )\r\n}\r\n\r\nexport default ListTracker\r\n"]},"metadata":{},"sourceType":"module"}